///*//////////////////////////////////////////////////*\

//            Mixins for Media Queries
//----------------------------------------------------\\

// @mixin media-query()
// * used to dynamically write classes namespaced per
//   screen size. "sm" works on small screens and up
//
// @mixin min-width()
// * used in the flow of styles. Can be nested and
//   used to add styles based on screen width. Width up.
//
// @mixin max-width()
// * used in the flow of styles. Can be nested and
//   used to add styles based on screen width. Width down.

//\*//////////////////////////////////////////////////*/

@mixin media-query($mq) {

  $breakpoint-found: false;

  // Loop through the list of breakpoints we’ve provided in our settings file.
  @each $breakpoint in $breakpoints {

    // Grab the alias and the condition from their respective locations in
    // the list.
    $alias:     nth($breakpoint, 1);
    $condition: nth($breakpoint, 2);

    // If the media query we’ve specified has an alias and a condition...
    @if $mq == $alias and $condition {

      // ...tell the mixin that we’ve found it...
      $breakpoint-found: true;

      // ...and spit it out here.
      @media #{$condition} {
        @content;
      }

    }

  }

  // If the user specifies a non-exitent alias, send them a warning.
  @if $breakpoint-found == false{
    @warn "Oops! Breakpoint ‘#{$mq}’ does not exist."
  }

} // end media query


@mixin min-width($width) {

  // if screen is larger than $screen-xs
  @if $width == xs {
    @media only screen and (min-width: $screen-xs) {
      @content;
    }
  }

  // if screen is larger than $screen-sm
  @else if $width == sm {
    @media only screen and (min-width: $screen-sm) {
      @content;
    }
  }

  // if screen is larger than $screen-md
  @else if $width == md {
    @media only screen and (min-width: $screen-md) {
      @content;
    }
  }

  // if screen is larger than $screen-lg
  @else if $width == lg {
    @media only screen and (min-width: $screen-lg) {
      @content;
    }
  }

} // end min-width()


@mixin max-width($width) {

  // if screen is small than $screen-xs
  @if $width == xs {
    @media only screen and (max-width: $screen-xs) {
      @content;
    }
  }

  // if screen is small than $screen-sm
  @else if $width == sm {
    @media only screen and (max-width: $screen-sm) {
      @content;
    }
  }

  // if screen is small than $screen-md
  @else if $width == md {
    @media only screen and (max-width: $screen-md) {
      @content;
    }
  }

  // if screen is small than $screen-lg
  @else if $width == lg {
    @media only screen and (max-width: $screen-lg) {
      @content;
    }
  }

} // end min-width()
