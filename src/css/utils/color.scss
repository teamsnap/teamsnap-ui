$permutations: "Primary", "Negative", "Warning", "Success", "Neutral";
$maxIndex: 999;

@each $fn in $permutations {
  @for $i from 1 through 9 {
    .u-color#{$fn}#{$i} {
      color: call(get-function(to-lower-case(str-insert("color-", $fn, $maxIndex))), $i) !important;
    }
  }
}

// TODO: rename to .u-colorSuccess?
.u-colorPositive {
  color: color-success(5) !important;
}

.u-colorNegative {
  color: color-negative(5) !important;
}

.u-colorPrimary {
  color: color-primary(5) !important;
}

.u-colorWarning {
  color: color-warning(5) !important;
}

.u-colorSecondary {
  color: $cu-secondary !important;
}

.u-colorInfo {
  color: $cu-info !important;
}

.u-colorGrey {
  color: color-neutral(5) !important;
}

.u-colorHighlight {
  color: $cu-highlight !important;
}

.u-colorForeground {
  color: $cu-foreground !important;
}


// * Link Colors (other than default)

.u-linkNegative {
  color: $cu-negative !important;
  &:hover, &:active {
    color: scaleColor($cu-negative, -1) !important;
  }
}

// Applies link color and hover states to all child elements
.u-linkCascade * {
  color: $color-links !important;
  &:hover, &:active {
    color: $color-links--hover !important;
  }
}

// * BG colors

.u-bgPositive {
  background-color: $cu-positive !important;
}

.u-bgNegative {
  background-color: $cu-negative !important;
}

.u-bgPrimary {
  background-color: $cu-primary !important;
}

.u-bgSecondary {
  background-color: $cu-secondary !important;
}

.u-bgHighlight {
  background-color: $cu-highlight !important;
}

.u-bgLinkLight {
  background-color: scaleColor($color-links, 8) !important;
}

.u-bgForeground {
  background-color: $cu-foreground !important;
}

.u-bgMiddleground {
  background-color: $cu-middleground !important;
}

.u-bgBackground {
  background-color: $cu-background !important;
}

// * Responsive, as necessary

@media (min-width: $breakpoint-xs) {
  .u-xs-bgForeground {
    background-color: $cu-foreground !important;
  }
}
